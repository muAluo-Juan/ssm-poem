<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
     xmlns:p="http://www.springframework.org/schema/p"
    xsi:schemaLocation="
    	   http://www.springframework.org/schema/beans 
    	   http://www.springframework.org/schema/beans/spring-beans.xsd
    	   http://www.springframework.org/schema/context 
           http://www.springframework.org/schema/context/spring-context.xsd
    	   http://www.springframework.org/schema/mvc
           http://www.springframework.org/schema/mvc/spring-mvc.xsd ">              
  
  <context:component-scan base-package="controller"/> 
  <context:component-scan base-package="service"/> 
  <mvc:annotation-driven />
  <!-- 允许css目录下所有文件可见 -->
  <mvc:resources location="/css/" mapping="/css/**"></mvc:resources> 
  <mvc:resources location="/fonts/" mapping="/fonts/**"></mvc:resources> 
  <mvc:resources location="/images/" mapping="/images/**"></mvc:resources> 
  <mvc:resources location="/js/" mapping="/js/**"></mvc:resources> 
  <mvc:resources location="/html/" mapping="/html/**"></mvc:resources>
  <mvc:resources location="/dist/" mapping="/dist/**"></mvc:resources>
    
  <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
              id="internalResourceViewResolver">
       <!-- 前缀 -->
       <property name="prefix" value="/WEB-INF/page/" />
       <!-- 后缀 -->
       <property name="suffix" value=".jsp" />
  </bean>
   <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />
  <!-- 配置返回json数据 -->
  <!--配置handlerAdaptor-->
  <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter" 
		p:ignoreDefaultModelOnRedirect="true">
    <property name="messageConverters">
      <list>
        <!--配置转换器-->
        <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"></bean>
      </list>
    </property>
  </bean>
  <!-- 4.配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中 -->
  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
   <!-- 注入sqlSessionFactory -->
    <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
   <!-- 扫描所有的dao接口的实现，加入到Ioc容器中，也是单元测试的条件 -->
    <property name="basePackage" value="dao" />
  </bean>
  <!--配置拦截器, 多个拦截器,顺序执行 -->
    <mvc:interceptors>
        <mvc:interceptor>
            <!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->
            <mvc:mapping path="/**"/>
            <bean class="interceptor.Interceptor"></bean>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="interceptor.AuthenInterceptor"></bean>
        </mvc:interceptor>
        <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
    </mvc:interceptors>
   
</beans>
